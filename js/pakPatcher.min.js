let QUEST_LIST="";const TABLE="Table",CELL="Cell",ROW="Row",PATTERN="_xml.pak",TARGET_NAME="text_ui_quest.xml",PAK_INPUT=document.getElementById("pakInput");function getNewXmlFileName(){return`text__${mapManifest.get("fieldModName")}.xml`}function getOutputZipFileName(){return`${mapManifest.get("fieldModName")}.zip`}class File{constructor(e,t){this.name=e,this.data=t}}function getTimestamp(){const e=new Date,t=String(e.getFullYear()).padStart(4,"0"),n=String(e.getMonth()+1).padStart(2,"0");return`${String(e.getDate()).padStart(2,"0")}.${n}.${t}`}function minifyXML(e){return e.replace(/\s*(<[^>]+>)\s*/g,"$1").trim()}function sanitizeDirectoryName(e){return e.replace(/[\/\\:*<>?"|\s]/g,"")}function setStatus(e){setStatusMsg(e)}function downloadBlob(e,t){setStatus(`The download of the '${t}' file should start soon.`);const n=URL.createObjectURL(e),a=document.createElement("a");a.href=n,a.download=t,document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(n)}function hexStringToUint8Array(e){if(e.length%2!=0)throw new Error("Hex string must have an even number of characters");let t=new Uint8Array(e.length/2);for(let n=0;n<e.length;n+=2)t[n/2]=parseInt(e.substr(n,2),16);return t}function uint8ArrayToHexString(e){return Array.from(e,(e=>e.toString(16).padStart(2,"0"))).join("").toUpperCase()}const MANIFEST_CONFIG_NAME="mapManifest";var mapManifest0=new Map;mapManifest0.set("fieldModName","MarkTimedQuests"),mapManifest0.set("fieldModDescription","Marks the quests that have a time limit."),mapManifest0.set("fieldAuthor","Mi5hmasH"),mapManifest0.set("fieldModVersion","1.0"),mapManifest0.set("fieldKCDVersion","1.9.6");var mapManifest=mapManifest0;const QUEST_CONFIG_NAME="mapQuest";var mapQuest0=new Map;mapQuest0.set("fieldQuestIndicator","[â€ ]"),mapQuest0.set("fieldMarkedQuestList",["subchapter_293_name","subchapter_294_name","subchapter_323_name","subchapter_348_name","subchapter_365_name","subchapter_373_name","subchapter_383_name","subchapter_384_name","subchapter_397_name","subchapter_403_name","subchapter_454_name","subchapter_524_name","subchapter_615_name","subchapter_661_name","subchapter_676_name"]);var mapQuest=mapQuest0;function getMarkedQuestList(){return mapQuest.get("fieldMarkedQuestList").split(",")}const magicSpell=":voMX/.?>+U.f?%Al9%RQRwk!RzcA|Rn]q\\Oo&Vx";function mapToObject(e){let t={};return e.forEach(((e,n)=>{t[n]=e})),t}function objectToMap(e){let t=new Map;for(let n in e)e.hasOwnProperty(n)&&t.set(n,e[n]);return t}async function encryptData(e,t){let n=new TextEncoder,a=await crypto.subtle.importKey("raw",n.encode(t),"PBKDF2",!1,["deriveKey"]),s=crypto.getRandomValues(new Uint8Array(16)),i=await crypto.subtle.deriveKey({name:"PBKDF2",salt:s,iterations:1e5,hash:"SHA-256"},a,{name:"AES-GCM",length:256},!0,["encrypt"]),o=crypto.getRandomValues(new Uint8Array(12)),r=await crypto.subtle.encrypt({name:"AES-GCM",iv:o},i,n.encode(e)),l=new Uint8Array(r),c=new Uint8Array(o.length+l.length+s.length),u=0;return c.set(o,u),u+=o.length,c.set(l,u),u+=l.length,c.set(s,u),c}async function decryptData(e,t){let n=new TextEncoder,a=await crypto.subtle.importKey("raw",n.encode(t),"PBKDF2",!1,["deriveKey"]),s=e.slice(0,12),i=e.slice(12,e.length-16),o=e.slice(e.length-16,e.length),r=await crypto.subtle.deriveKey({name:"PBKDF2",salt:o,iterations:1e5,hash:"SHA-256"},a,{name:"AES-GCM",length:256},!0,["decrypt"]),l=await crypto.subtle.decrypt({name:"AES-GCM",iv:s},r,i);return(new TextDecoder).decode(l)}async function setConfig(e,t){let n=mapToObject(e),a=JSON.stringify(n),s=await encryptData(a,magicSpell);localStorage.setItem(t,uint8ArrayToHexString(s))}async function getConfig(e){let t=localStorage.getItem(e);if(t){let e=await decryptData(hexStringToUint8Array(t),magicSpell);return objectToMap(JSON.parse(e))}return null}function setInputs(e){e.forEach(((e,t)=>{document.getElementById(t).value=e}))}function getInputs(e){e.forEach(((t,n)=>{let a=document.getElementById(n).value.trim();null!==a&&""!==a&&e.set(n,a)}))}function collectInputs(){getInputs(mapQuest),getInputs(mapManifest)}function fixManifestInputs(){document.getElementById("fieldModName").value=sanitizeDirectoryName(document.getElementById("fieldModName").value)}function createManifest(){const e=`<?xml version="1.0" encoding="utf-8"?><kcd_mod><info><name>${mapManifest.get("fieldModName")}</name><description>${mapManifest.get("fieldModDescription")}</description><author>${mapManifest.get("fieldAuthor")}</author><version>${mapManifest.get("fieldModVersion")}</version><created_on>${getTimestamp()}</created_on></info><supports><kcd_version>${mapManifest.get("fieldKCDVersion")}</kcd_version></supports></kcd_mod>`;return new File("mod.manifest",e)}function populateQuestTable(e){const t=document.querySelector("#questTable tbody");t.innerHTML="";let n=0;e.forEach(((e,a)=>{n++;const s=document.createElement("tr"),i=document.createElement("td"),o=document.createElement("td"),r=document.createElement("td");i.textContent=n,o.textContent=e,r.textContent=a,s.appendChild(i),s.appendChild(o),s.appendChild(r),t.appendChild(s)}))}async function getFilesFromPaks(){const e=PAK_INPUT.files;if(setStatus("Processing..."),0==e.length)return void setStatus("Please select a PAK file first.");const t=Array.from(e).filter((e=>e.name.endsWith(PATTERN))),n=new JSZip;let a=0;const s=[];for(let e of t){a++,setStatus(`[${a}/${t.length}] Processing '${e.name}'.`);const i=await e.arrayBuffer(),o=await n.loadAsync(i);let r="";for(const e in o.files)e==TARGET_NAME&&(r=await o.files[e].async("string"));""!==r&&(r=processXML(r),s.push(new File(e.name,r)))}return s}function processXML(e){const t=(new DOMParser).parseFromString(e,"application/xml").getElementsByTagName(ROW),n=[];for(let e of t){const t=e.getElementsByTagName(CELL)[0];t&&QUEST_LIST.includes(t.textContent)&&n.push(e.cloneNode(!0))}for(let e of n){const t=e.getElementsByTagName(CELL),n=t[t.length-1];n.textContent=`${mapQuest.get("fieldQuestIndicator")} ${n.textContent}`}const a=document.implementation.createDocument(null,null),s=a.createElement(TABLE);for(let e of n)s.appendChild(e);a.appendChild(s);return minifyXML((new XMLSerializer).serializeToString(a))}async function packZip(e){const t=new JSZip,n=mapManifest.get("fieldModName");for(const a of e){const e=new JSZip;e.file(getNewXmlFileName(),a.data);const s=await e.generateAsync({type:"Uint8Array",compression:"DEFLATE",compressionOptions:{level:9}});t.folder(`${n}/Localization`).file(a.name,s)}const a=createManifest();return t.file(`${n}/${a.name}`,a.data),await t.generateAsync({type:"blob",compression:"DEFLATE",compressionOptions:{level:9}})}window.updateQuestIndicatorField=()=>{var e=document.getElementById("fieldQuestIndicator").value;document.getElementById("fieldPreview").value=`${e} Quest Title`},window.saveManifestConfig=async()=>{fixManifestInputs(),getInputs(mapManifest),await setConfig(mapManifest,"mapManifest")},window.loadManifestConfig=async()=>{let e=await getConfig("mapManifest");e&&(mapManifest=e),setInputs(mapManifest)},window.deleteManifestConfig=async()=>{localStorage.removeItem("mapManifest"),setInputs(mapManifest=mapManifest0)},window.saveQuestConfig=async()=>{getInputs(mapQuest),await setConfig(mapQuest,"mapQuest")},window.loadQuestConfig=async()=>{let e=await getConfig("mapQuest");e&&(mapQuest=e),setInputs(mapQuest),updateQuestIndicatorField()},window.deleteQuestConfig=async()=>{localStorage.removeItem("mapQuest"),setInputs(mapQuest=mapQuest0),updateQuestIndicatorField()},window.getQuestIDsFromFirstFile=async()=>{const e=PAK_INPUT.files;if(0==e.length)return;const t=Array.from(e).filter((e=>e.name.endsWith(PATTERN))),n=new JSZip;if(0==t.length)return;const a=await t[0].arrayBuffer(),s=await n.loadAsync(a);let i="";for(const e in s.files)e==TARGET_NAME&&(i=await s.files[e].async("string"));if(""===i)return;const o=(new DOMParser).parseFromString(i,"application/xml").getElementsByTagName(ROW),r=new Map;for(let e of o){let t=e.getElementsByTagName(CELL);t[0].textContent.endsWith("_name")&&r.set(t[0].textContent,t[t.length-1].textContent)}populateQuestTable(r)},window.validatePaks=e=>{const t=e.target,n=Array.from(t.files),a=n.filter((e=>e.name.endsWith(PATTERN)));a.length,n.length;const s=new DataTransfer;a.forEach((e=>s.items.add(e))),t.files=s.files;let i=t.files.length<1;const o=["runButton","loadQuestIDsFromFirstFile"];for(let e of o)document.getElementById(e).disabled=i},window.insertCharacter=e=>{let t=e.textContent.trim(),n=document.getElementById("fieldQuestIndicator");n.value.length>n.getAttribute("maxlength")||(n.value+=t,updateQuestIndicatorField())},window.prepareMod=async()=>{setBusyState(!0),collectInputs(),QUEST_LIST=getMarkedQuestList(),QUEST_LIST.sort();const e=await getFilesFromPaks();downloadBlob(await packZip(e),getOutputZipFileName()),setBusyState(!1)};